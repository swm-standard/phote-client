name: Build, Push Docker Image and Deploy to EC2

on:
  push:
    branches:
      - 'deploy'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Create .env
      - name: Create .env
        run: | 
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" >> .env
          echo "NEXT_PUBLIC_LOGIN_REDIRECT_URL=${{ secrets.NEXT_PUBLIC_LOGIN_REDIRECT_URL }}" >> .env
          echo "NEXT_PUBLIC_KAKAO_API_KEY=${{ secrets.NEXT_PUBLIC_KAKAO_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_GOOGLE_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_ACCESS_TOKEN_TTL=${{ secrets.NEXT_PUBLIC_ACCESS_TOKEN_TTL }}" >> .env
          echo "NEXT_PUBLIC_REFRESH_TOKEN_TTL=${{ secrets.NEXT_PUBLIC_REFRESH_TOKEN_TTL }}" >> .env

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APPNAME }}:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APPNAME }}:latest

      # Deploy to AWS EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            echo "Running: docker login"
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            echo "Running: container stop"
            sudo docker stop $(sudo docker ps -q)
            
            echo "Running: image remove"
            sudo docker rm $(sudo docker ps -a -q)
            
            echo "Running: image prune"
            sudo docker image prune -a -f
            
            echo "Running: pull new image"
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APPNAME }}:latest
            
            echo "Running: run container by daemon"
            sudo docker run -d --platform linux/amd64 -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APPNAME }}:latest